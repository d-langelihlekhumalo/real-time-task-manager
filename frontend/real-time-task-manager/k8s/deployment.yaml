apiVersion: apps/v1
kind: Deployment
metadata:
  name: task-manager-frontend
  labels:
    app: task-manager-frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: task-manager-frontend
  template:
    metadata:
      labels:
        app: task-manager-frontend
    spec:
      containers:
        - name: frontend
          image: task-manager-frontend:latest
          ports:
            - containerPort: 80
          env:
            - name: NODE_ENV
              value: 'production'
          resources:
            requests:
              memory: '128Mi'
              cpu: '100m'
            limits:
              memory: '256Mi'
              cpu: '200m'
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: task-manager-frontend-service
spec:
  selector:
    app: task-manager-frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: task-manager-frontend-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: 'true'
    cert-manager.io/cluster-issuer: 'letsencrypt-prod'
spec:
  tls:
    - hosts:
        - your-domain.com
      secretName: task-manager-tls
  rules:
    - host: your-domain.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: task-manager-frontend-service
                port:
                  number: 80
